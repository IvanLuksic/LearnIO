import type { ErrorObject, Vocabulary } from "../../types";
import { AdditionalItemsError } from "./additionalItems";
import { ContainsError } from "./contains";
import { DependenciesError } from "./dependencies";
import { PropertyNamesError } from "./propertyNames";
import { AdditionalPropertiesError } from "./additionalProperties";
import { OneOfError } from "./oneOf";
import { IfKeywordError } from "./if";
declare const applicator: Vocabulary;
export default applicator;
export declare type ApplicatorKeywordError = ErrorWithoutParams | AdditionalItemsError | ContainsError | AdditionalPropertiesError | DependenciesError | IfKeywordError | OneOfError | PropertyNamesError;
export declare type ErrorWithoutParams = ErrorObject<"anyOf" | "not" | "false schema", Record<string, never>>;
